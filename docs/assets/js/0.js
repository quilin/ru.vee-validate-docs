webpackJsonp([0],{342:function(e,a,t){var s,i;s=t(370);var r=t(399);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},343:function(e,a,t){var s,i;s=t(371);var r=t(402);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},344:function(e,a,t){var s,i;s=t(372);var r=t(395);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},345:function(e,a,t){var s,i;s=t(366);var r=t(407);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},347:function(e,a,t){var s,i;s=t(368);var r=t(403);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},348:function(e,a,t){var s,i,r=t(409);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},349:function(e,a,t){var s,i;s=t(369);var r=t(413);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},351:function(e,a){e.exports={rules:["after","alpha","alpha_dash","alpha_num","alpha_spaces","before","between","confirmed","credit_card","date_between","date_format","decimal","digits","dimensions","email","ext","image","in","ip","max","max_value","mimes","min","min_value","not_in","numeric","regex","required","size","url"]}},365:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var s=t(2);a.default={validator:null,data:function(){return{email:"",name:"",errors:null}},watch:{email:function(e){this.validator.validate("email",e)},name:function(e){this.validator.validate("name",e)}},methods:{validateForm:function(){this.validator.validateAll({email:this.email,name:this.name})},clearErrors:function(){this.errors.clear()}},created:function(){this.validator=new s.Validator({email:"required|email",name:"required|alpha|min:3"}),this.$set(this,"errors",this.validator.errorBag)}}},366:function(e,a,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"__esModule",{value:!0});var i=t(394),r=s(i),n=t(343),l=s(n),o=t(344),c=s(o),d=t(342),v=s(d);a.default={components:{ValidatorExample:r.default,ErrorsApi:l.default,ValidatorApi:c.default,DataAttributesApi:v.default}}},368:function(e,a,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"__esModule",{value:!0});var i=t(7),r=s(i),n=t(351),l=s(n),o=t(379),c=s(o);a.default={data:function(){return{rules:new r.default(l.default.rules).chunk(10).all()}},components:{BasicExample:c.default}}},369:function(e,a,t){"use strict";function s(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(a,"__esModule",{value:!0});var i=t(7),r=s(i),n=t(351),l=s(n);a.default={data:function(){return{rules:new r.default(l.default.rules).chunk(10).all()}}}},370:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default={data:function(){return{attributes:[{name:"data-vv-as",description:"Specifies a pretty name for the field."},{name:"data-vv-delay",description:"Specifies the delay amount in milliseconds for triggering the validation."},{name:"data-vv-name",description:"Specifies a name for the field, used in components validation and as a fallback."},{name:"data-vv-rules",description:"Specifies the list of validations to be run against the field value."},{name:"data-vv-value-path",description:"Specifies the value path within a component $data to retrive the component current value."}]}}}},371:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default={data:function(){return{methods:[{name:"add",params:"{String field}, {String msg}, {String ruleName}, {String scope?}",returns:"undefined",description:"Adds an error to the errors object."},{name:"all",params:"{String scope?}",returns:"Array",description:"Gets all error messages in an array, specifying a scope will retrive the messages within that scope."},{name:"any",params:"{String scope?}",returns:"Boolean",description:"Checks if any errors exist, specifying a scope will limit the check to within that scope."},{name:"clear",params:"{String scope?}",returns:"undefined",description:"Clears (removes) all errors, specifying a scope will remove errors only associated with that scope."},{name:"collect",params:"{String name?},{String scope?}, {Boolean mapped?}",returns:"Array|Object",description:"Collects errors associated with a specific field. not passing the field name will group all errors by field name instead. specifying a scope will limit the collecting behavior to a specific scope. You can optionally specify if the errors objects should be mapped to error messages or not, providing false will return objects containing the full information about the error."},{name:"count",params:"",returns:"Number",description:"Returns the number of errors that are currently in the collection."},{name:"first",params:"{String field|selector}, {String scope?}",returns:"String",description:"Returns the first error message associated with a specific field or specified by the selector, providing a scope will look for messages within that scope."},{name:"firstByRule",params:"{String field}, {String rule}, {String scope?}",returns:"String",description:"Returns the first error message associated with a specific field and rule, providing a scope will look for messages within that scope."},{name:"has",params:"{String field|selector}, {String scope?}",returns:"Boolean",description:"Checks if there is an error message associated with a specific field or specified by the selector, providing a scope will check for messages within that scope."},{name:"remove",params:"{String field}, {String scope?}",returns:"undefined",description:"Removes all errors associated with a specific field, specifying a scope will remove messages only for that field and scope."}]}}}},372:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default={name:"validator-api",data:function(){return{properties:[{name:"errorBag",type:"ErrorBag",description:"Contains the errors for the validator instance."},{name:"fieldBag",type:"FieldBag",description:"Contains the fields' flags for the validator instance."},{name:"strictMode",type:"Boolean",description:"The strict mode status for the validator instance."}],methods:{static:[{name:"create",params:"{String validations?},{Vue vm?}",returns:"Validator",description:"Creates a validator object."},{name:"extend",params:"{String name}, {Object|Function validator}",returns:"undefined",description:"Adds a custom validator to the list of the available validators. Throws an exception if the validator already exists."},{name:"installDateTimeValidators",params:"{Moment moment}",returns:"undefined",descriptions:"Activates the DateTime validators, requires a moment reference."},{name:"remove",params:"{String name}",returns:"undefined",description:"Removes a validator/rule from the list of validations if it exists."},{name:"setLocale",params:"{String language?}",returns:"undefined",description:"Sets the active locale for all validators, not specifying a locale will set it to English."},{name:"setStrictMode",params:"{Boolean strict}",returns:"undefined",description:"Sets the operating mode for the validator instance."},{name:"updateDictionary",params:"{Object data}",returns:"undefined",description:"Updates the dictionary for messages and attributes that is shared by all validators, overwriting any duplicates."}],instance:[{name:"attach",params:"{String field}, {String|Object checks}, {String prettyName?}, {Function context?}, {Function getter?}",returns:"undefined",description:"Registers a field for validation, specifying a prettyName will cause that name to be used instead of the actual field name."},{name:"detach",params:"{String name}, {String scope}",returns:"undefined",description:"Removes (unregisters) the field from the validator, this will also remove all its errors."},{name:"extend",params:"{String name}, {Object|Function validator}",returns:"undefined",description:"Adds a custom validator to the list of the available validators. Throws an exception if the validator already exists."},{name:"getErrors",params:"",returns:"ErrorBag",description:"Gets the internal ErrorBag instance."},{name:"getLocale",params:"",returns:"String",description:"Gets the currently active locale identifier."},{name:"installDateTimeValidators",params:"{Moment moment}",returns:"undefined",descriptions:"Activates the DateTime validators, requires a moment reference."},{name:"remove",params:"{String name}",returns:"undefined",description:"Removes a validator/rule from the list of validations if it exists."},{name:"setLocale",params:"{String language?}",returns:"undefined",description:"Sets the active locale for all validators, not specifying a locale will set it to English."},{name:"setStrictMode",params:"{Boolean strict}",returns:"undefined",description:"Sets the operating mode for the validator instance."},{name:"updateDictionary",params:"{Object data}",returns:"undefined",description:"Updates the dictionary for messages and attributes that is shared by all validators, overwriting any duplicates."},{name:"validate",params:"{String field}, {String value}, {String scope?}",returns:"Boolean|Promise",description:"Runs the value against the list of registered validations for the specified field, specifying a scope will validate the field within that scope. It will return a boolean unless at least one validator returns a Promise, the method will then return a promise which can be later resolved to a boolean."},{name:"validateAll",params:"{Object values?}",returns:"Promise",description:"Validates each field (key), and value of the values object against their respective list of validators, returns a promise that can be later resolved to a Boolean. Not specifying a values object will force the validator to retrive as much values as it reliably can."}]}}}}},379:function(e,a,t){var s,i,r=t(406);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},394:function(e,a,t){var s,i;s=t(365);var r=t(418);i=s=s||{},"object"!=typeof s.default&&"function"!=typeof s.default||(i=s=s.default),"function"==typeof i&&(i=i.options),i.render=r.render,i.staticRenderFns=r.staticRenderFns,e.exports=s},395:function(e,a){e.exports={render:function(){var e=this;return e._c("div",[e._m(0),e._v(" "),e._c("table",{staticClass:"table"},[e._m(1),e._v(" "),e._c("tbody",e._l(e.properties,function(a){return e._c("tr",[e._c("td",{staticClass:"is-method-name"},[e._v(e._s(a.name))]),e._v(" "),e._c("td",[e._v(e._s(a.type))]),e._v(" "),e._c("td",[e._v(e._s(a.description))])])}))]),e._v(" "),e._m(2),e._v(" "),e._c("table",{staticClass:"table"},[e._m(3),e._v(" "),e._c("tbody",e._l(e.methods.instance,function(a){return e._c("tr",[e._c("td",{staticClass:"is-method-name"},[e._v(e._s(a.name))]),e._v(" "),e._c("td",[e._v(e._s(a.params))]),e._v(" "),e._c("td",[e._v(e._s(a.returns))]),e._v(" "),e._c("td",[e._v(e._s(a.description))])])}))]),e._v(" "),e._m(4),e._v(" "),e._c("table",{staticClass:"table"},[e._m(5),e._v(" "),e._c("tbody",e._l(e.methods.instance,function(a){return e._c("tr",[e._c("td",{staticClass:"is-method-name"},[e._v(e._s(a.name))]),e._v(" "),e._c("td",[e._v(e._s(a.params))]),e._v(" "),e._c("td",[e._v(e._s(a.returns))]),e._v(" "),e._c("td",[e._v(e._s(a.description))])])}))])])},staticRenderFns:[function(){var e=this;return e._c("h2",{staticClass:"title is-5",attrs:{id:"validator-public-props"}},[e._c("a",{attrs:{href:"#validator-public-props"}},[e._v("Public Properties")])])},function(){var e=this;return e._c("thead",[e._c("tr",[e._c("th",[e._v("Property")]),e._v(" "),e._c("th",[e._v("Type")]),e._v(" "),e._c("th",[e._v("Description")])])])},function(){var e=this;return e._c("h2",{staticClass:"title is-5",attrs:{id:"validator-static-methods"}},[e._c("a",{attrs:{href:"#validator-static-methods"}},[e._v("Public Static Methods")])])},function(){var e=this;return e._c("thead",[e._c("tr",[e._c("th",[e._v("Method")]),e._v(" "),e._c("th",[e._v("Params")]),e._v(" "),e._c("th",[e._v("Return")]),e._v(" "),e._c("th",[e._v("Description")])])])},function(){var e=this;return e._c("h2",{staticClass:"title is-5",attrs:{id:"validator-instance-methods"}},[e._c("a",{attrs:{href:"#validator-instance-methods"}},[e._v("Public Instance Methods")])])},function(){var e=this;return e._c("thead",[e._c("tr",[e._c("th",[e._v("Method")]),e._v(" "),e._c("th",[e._v("Params")]),e._v(" "),e._c("th",[e._v("Return")]),e._v(" "),e._c("th",[e._v("Description")])])])}]}},399:function(e,a){e.exports={render:function(){var e=this;return e._c("table",{staticClass:"table"},[e._m(0),e._v(" "),e._c("tbody",e._l(e.attributes,function(a){return e._c("tr",[e._c("td",{staticClass:"is-method-name"},[e._v(e._s(a.name))]),e._v(" "),e._c("td",[e._v(e._s(a.description))])])}))])},staticRenderFns:[function(){var e=this;return e._c("thead",[e._c("tr",[e._c("th",[e._v("Attribute")]),e._v(" "),e._c("th",[e._v("Description")])])])}]}},402:function(e,a){e.exports={render:function(){var e=this;return e._c("table",{staticClass:"table"},[e._m(0),e._v(" "),e._c("tbody",e._l(e.methods,function(a){return e._c("tr",[e._c("td",{staticClass:"is-method-name"},[e._v(e._s(a.name))]),e._v(" "),e._c("td",[e._v(e._s(a.params))]),e._v(" "),e._c("td",[e._v(e._s(a.returns))]),e._v(" "),e._c("td",[e._v(e._s(a.description))])])}))])},staticRenderFns:[function(){var e=this;return e._c("thead",[e._c("tr",[e._c("th",[e._v("Method")]),e._v(" "),e._c("th",[e._v("Params")]),e._v(" "),e._c("th",[e._v("Return")]),e._v(" "),e._c("th",[e._v("Description")])])])}]}},403:function(e,a){e.exports={render:function(){var e=this;return e._c("div",[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._m(4),e._v(" "),e._c("b",[e._v("Vue 1.x")]),e._v(" "),e._c("code-block",{staticClass:"language-bash"},[e._v("npm install vee-validate@prev --save")]),e._v(" "),e._c("b",[e._v("Vue 2.x")]),e._v(" "),e._c("code-block",{staticClass:"language-bash"},[e._v("npm install vee-validate --save")]),e._v(" "),e._m(5),e._v(" "),e._c("b",[e._v("Vue 1.x")]),e._v(" "),e._c("code-block",{staticClass:"language-bash"},[e._v("bower install vee-validate#1.0.0-beta.11 --save")]),e._v(" "),e._c("b",[e._v("Vue 2.x")]),e._v(" "),e._c("code-block",{staticClass:"language-bash"},[e._v("bower install vee-validate#2.0.0-beta.19 --save")]),e._v(" "),e._m(6),e._v("\n        Head over to "),e._c("a",{attrs:{href:"https://www.jsdelivr.com/projects/vee-validate",target:"jsdelivr"}},[e._v("jsdelivr")]),e._v(" and grab the latest version.\n\n        Then you may use it like this:\n        "),e._c("code-block",{staticClass:"language-html"},[e._v('\n            <script src="path/to/vue.js"></script>\n            <script src="path/to/vee-validate.js"></script>\n            <script>\n                Vue.use(VeeValidate); // good to go.\n            </script>\n        ')]),e._v("\n\n        or you may import it using ES6:\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            import Vue from 'vue';\n            import VeeValidate from 'vee-validate';\n\n            Vue.use(VeeValidate);\n        ")]),e._v(" "),e._c("p"),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._c("basic-example"),e._v(" "),e._c("div",{staticClass:"flex-center"},[e._c("router-link",{staticClass:"link",attrs:{to:{name:"examples"}}},[e._v("More Examples")])]),e._v(" "),e._c("br"),e._v(" "),e._c("note",{attrs:{title:"Note"}},[e._v("\n        The field name that appears in the error messages is usually the input's "),e._c("code",[e._v("name")]),e._v(" attribute, you can specify a "),e._c("code",[e._v("data-vv-name")]),e._v(" attribute as an alternative.\n    ")]),e._v(" "),e._c("note",[e._v("\n        Its always a good idea to have a "),e._c("code",[e._v("name")]),e._v(" attribute on your fields. If you are not binding the field and do not have a name attribute the validator won't properly register the field.\n    ")]),e._v(" "),e._m(9),e._v(" "),e._c("p",[e._v("\n        Naturally, you would want to display the errors to your users. The plugin augments your Vue instance with a private validator object and a public errors data object.\n        You are responsible for how the errors should be rendered.\n        "),e._c("br"),e._c("br"),e._v("The errors object exposes a simple methods to help you render errors:\n        "),e._m(10),e._v("\n        There are a few more "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"api",hash:"#error-bag"}}},[e._v("methods")]),e._v(" that you can use to manipulate the errors object.\n    ")]),e._v(" "),e._m(11),e._v(" "),e._c("p",[e._v("There are more than 20 rules available to validate your inputs:")]),e._v(" "),e._c("div",{staticClass:"columns is-multiline"},e._l(e.rules,function(a){return e._c("div",{class:"column is-"+12/e.rules.length},[e._c("ul",{staticClass:"list-circle"},e._l(a,function(a){return e._c("li",[e._c("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#rule-"+a}}},[e._v(e._s(a))])])}))])})),e._v(" "),e._c("p",[e._v("Visit the "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#available-rules"}}},[e._v("rules documentation")]),e._v(" to learn more about how to use each rule, and how to "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#custom-rules"}}},[e._v("create your own")]),e._v(".")]),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n        import Vue from 'vue';\n        import VeeValidate from 'vee-validate';\n\n        const config = {\n            errorBagName: 'errors', // change if property conflicts.\n            fieldsBagName: 'fields',\n            delay: 0,\n            locale: 'en',\n            dictionary: null,\n            strict: true,\n            enableAutoClasses: false,\n            classNames: {\n                touched: 'touched', // the control has been blurred\n                untouched: 'untouched', // the control hasn't been blurred\n                valid: 'valid', // model is valid\n                invalid: 'invalid', // model is invalid\n                pristine: 'pristine', // control has not been interacted with\n                dirty: 'dirty' // control has been interacted with\n            }\n        };\n\n        Vue.use(VeeValidate, config);\n    ")]),e._v(" "),e._c("ul",{staticClass:"list-circle"},[e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("dictionary:")]),e._v(" A dictionary to be merged with the validators dictionary, check "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#custom-messages"}}},[e._v("custom messages")]),e._v(" and "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"localization"}}},[e._v("localization")]),e._v(" sections.")]),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),e._m(20)])])},staticRenderFns:[function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"about"}},[e._c("a",{attrs:{href:"#about"}},[e._v("What is vee-validate?")])])},function(){var e=this;return e._c("p",[e._v("\n        This is a lightweight plugin for "),e._c("a",{staticClass:"link",attrs:{href:"https://vuejs.org/"}},[e._v("Vue.js")]),e._v(" that allows you to validate input fields, and display errors.\n        "),e._c("br"),e._c("br"),e._v("\n        You don't have to do anything fancy in your app, most of the work goes into the html.\n        You only need to specify for each input what kind of validators should be used when the value changes. You will then get informed of the errors for each field.\n        "),e._c("br"),e._c("br"),e._v("\n        Although most of the validations occur automatically, you can use the validator however you see fit. The validator object has no dependencies and is a standalone object.\n        "),e._c("br"),e._c("br"),e._v("\n        Currently there are over 20 validation rules available in the plugin.\n        This plugin is inspired by "),e._c("a",{staticClass:"link",attrs:{href:"https://laravel.com/"}},[e._v("PHP Framework Laravel's validation syntax")]),e._v(".\n        "),e._c("br"),e._c("br"),e._v("It also supports Vue 2.0. All examples here are built using Vue 2.0 with the plugin.\n    ")])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"installation"}},[e._c("a",{attrs:{href:"#installation"}},[e._v("Installation")])])},function(){var e=this;return e._c("p",[e._v("\n        You can install this plugin via "),e._c("a",{staticClass:"link",attrs:{href:"#npm"}},[e._v("npm")]),e._v(" or "),e._c("a",{staticClass:"link",attrs:{href:"#bower"}},[e._v("bower")]),e._v(" or via a "),e._c("a",{staticClass:"link",attrs:{href:"#cdn"}},[e._v("CDN")]),e._v(".\n        ")])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"npm"}},[e._c("a",{attrs:{href:"#npm"}},[e._v("npm")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"bower"}},[e._c("a",{attrs:{href:"#bower"}},[e._v("bower")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"cdn"}},[e._c("a",{attrs:{href:"#cdn"}},[e._v("CDN")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"basic-example"}},[e._c("a",{attrs:{href:"#basic-example"}},[e._v("Basic Example")])])},function(){var e=this;return e._c("p",[e._v("\n        All you need is to add the "),e._c("code",{staticClass:"inline"},[e._v("v-validate")]),e._v(" directive to the input you wish to validate.\n        "),e._c("br"),e._c("br"),e._v("\n        Then pass to the directive a "),e._c("code",{staticClass:"inline"},[e._v("rules")]),e._v(" string which contains a list of validation rules separated by a pipe '"),e._c("code",{staticClass:"inline"},[e._v("|")]),e._v("'.\n        For the following example the validation rules are straight forward, use "),e._c("code",{staticClass:"inline"},[e._v("required")]),e._v(" to indicate that the field is required.\n        And "),e._c("code",{staticClass:"inline"},[e._v("email")]),e._v(" to indicate that the field must be an email.\n        To combine both rules we assign the string value "),e._c("code",{staticClass:"inline"},[e._v("required|email")]),e._v(" to the "),e._c("code",{staticClass:"inline"},[e._v("v-validate")]),e._v(" expression value.\n    ")])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"render-errors"}},[e._c("a",{attrs:{href:"#render-errors"}},[e._v("Rendering Errors")])])},function(){var e=this;return e._c("ul",{staticClass:"list-circle"},[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("first('field')")]),e._v(" Fetches the first error message associated with that field.")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("collect('field')")]),e._v(" Fetches all error messages associated with that field. alternativly you can pass nothing and it will return errors grouped by fields")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("has('field')")]),e._v(" Checks if there are any errors associated with that field.")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("all()")]),e._v(" Gets all error messages.")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("any()")]),e._v(" Checks if there are any errors.")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"available-rules"}},[e._c("a",{attrs:{href:"#available-rules"}},[e._v("Available Rules")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"configuration"}},[e._c("a",{attrs:{href:"#configuration"}},[e._v("Configuration")])])},function(){var e=this;return e._c("p",[e._v("\n        You may need to configure some options to tweak some of the plugin internals, this is not required, but could cause conflicts. For example: if you are using a property called "),e._c("code",{staticClass:"inline"},[e._v("errors")]),e._v(" on your vue instance this may cause conflicts.\n         Here is how you would set up the options along with the default values:\n    ")])},function(){var e=this;return e._c("li",[e._c("code",{staticClass:"inline"},[e._v("errorBagName:")]),e._v(" The name of the ErrorBag object that will be injected in each of Vue's instances' data.")])},function(){var e=this;return e._c("li",[e._c("code",{staticClass:"inline"},[e._v("fieldsBagName:")]),e._v(" The name of the FieldBag object that will be injected All Vue instances.")])},function(){var e=this;return e._c("li",[e._c("code",{staticClass:"inline"},[e._v("delay:")]),e._v(" The default debounce time for all inputs (only affects validations).")])},function(){var e=this;return e._c("li",[e._c("code",{staticClass:"inline"},[e._v("locale:")]),e._v(" The default language for the validation messages.")])},function(){var e=this;return e._c("li",[e._c("code",{staticClass:"inline"},[e._v("strict:")]),e._v(" Fields that have no rules will fail validation unless "),e._c("code",{staticClass:"inline"},[e._v("strict")]),e._v(" is set to false.")])},function(){var e=this;return e._c("li",[e._c("code",{staticClass:"inline"},[e._v("enableAutoClasses:")]),e._v("Applies automatic classes on inputs or components root elements being validated.")])},function(){var e=this;return e._c("li",[e._c("code",{staticClass:"inline"},[e._v("classNames:")]),e._v("The classes to be applied depending on the state of the input.")])}]}},406:function(e,a){e.exports={render:function(){var e=this;return e._c("code-example",[e._c("div",{staticClass:"column is-12",slot:"example"},[e._c("label",{staticClass:"label",attrs:{for:"email"}},[e._v("Email")]),e._v(" "),e._c("p",{class:{control:!0}},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"required|email",expression:"'required|email'"}],class:{input:!0,"is-danger":e.errors.has("email")},attrs:{name:"email",type:"text",placeholder:"Email"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email"),expression:"errors.has('email')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("email")))])])]),e._v(" "),e._c("div",{slot:"code-html"},[e._v('\n        <div class="column is-12">\n            <label class="label" for="email">Email</label>\n            <p :class="{ \'control\': true }">\n                <input v-validate="\'required|email\'" :class="{\'input\': true, \'is-danger\': errors.has(\'email\') }" name="email" type="text" placeholder="Email">\n                <span v-show="errors.has(\'email\')" class="help is-danger">'+e._s("{{ errors.first('email') }}")+"</span>\n            </p>\n        </div>\n    ")]),e._v(" "),e._c("div",{slot:"code-js"},[e._v("\n        import Vue from 'vue';\n        import VeeValidate from 'vee-validate';\n\n        Vue.use(VeeValidate);\n\n        new Vue({\n            el: '#app'\n        });\n    ")])])},staticRenderFns:[]}},407:function(e,a){e.exports={render:function(){var e=this;return e._c("div",[e._m(0),e._v(" "),e._c("p",[e._v("\n        The "),e._c("code",[e._v("v-validate")]),e._v(" directive is the main way to validate your inputs, the directive accepts either a string or an object as a value.\n        "),e._c("br"),e._v("\n        If a string was passed it must be a valid rules string, that is the validation rules seperated by pipes '|'.\n        "),e._c("code-block",{staticClass:"language-html"},[e._v('\n            <input v-validate="\'required|email\'" name="field" type="text">\n        ')]),e._v(" "),e._c("br"),e._v("\n        If an object was passed it must contain a rules property which can be either a rule string like above or an object, along with the following:\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            const expression = {\n                rules: 'required|regex:^[0-9]+$', // required\n                scope: 'myscope', // optional\n                arg: 'form.email' // optional\n            };\n            \n            // Or use the object form for increased flexibility.\n            const expression = {\n                rules: {\n                    // parameterless rules take a boolean value.\n                    required: true,\n                    // single parameter rules take a single value.\n                    regex: /.(js|ts)$/,\n                    // multiple paramter rules take a single array.\n                    in: [1, 2, 3]\n                },\n                scope: 'myscope',\n                arg: 'from.email'\n            };\n        ")])]),e._m(1),e._v("\n        The directive also accepts an arg, that denotes the name of the vue model to validate.\n        "),e._c("code-block",{staticClass:"language-html"},[e._v('\n            <input v-model="email" v-validate:email="\'required|email\'" name="field" type="text">\n        ')]),e._v(" "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            export default {\n                data: () => ({\n                    email: ''\n                })\n            };\n        ")]),e._v("\n        For more complex args like a nested model, you may want to pass an object to the directive containing an "),e._c("code",[e._v("arg")]),e._v(" property which is mentioned above. Don't forget to send a "),e._c("code",[e._v("rules")]),e._v(" property as well.\n    "),e._c("p"),e._v(" "),e._c("note",[e._v("\n        As of version "),e._c("code",[e._v("2.0.0-beta.22")]),e._v(" you do not have to specify an arg at all, if your input/component has "),e._c("code",[e._v("v-model")]),e._v(" bound on, it will work without specifying the arg. As the plugin will figure out the model and watch for its changes.\n    ")]),e._v(" "),e._m(2),e._v(" "),e._c("p",[e._v("\n        data-* attributes provide an alternate interface for the plugin to specify what exactly should happen, providing a simple and Vue version-compatiable API. They are useful if you do not like to pass complex expressions to the directive.\n    ")]),e._v(" "),e._c("br"),e._v(" "),e._c("data-attributes-api"),e._v(" "),e._m(3),e._v(" "),e._c("p",[e._v("\n        The ErrorBag class is a wrapper around an array a collection object in other words, and is standalone and has no dependencies, you can use it in your code for any reason:\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            import { ErrorBag } from 'vee-validate'; // ES6 Import.\n            const bag = new ErrorBag();\n        ")]),e._v("\n        The internal array contains the error objects, the structure is:\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            {\n                errors: [\n                    { field: 'Field name', msg: 'Error message', rule: 'Rule Name', scope: 'Scope Name' },\n                    // other error objects.\n                ]\n            }\n        ")])]),e._v(" "),e._c("errors-api"),e._v(" "),e._m(4),e._v(" "),e._c("p",[e._v("\n        The validator is injected to the Vue instance as "),e._c("code",{staticClass:"inline"},[e._v("$validator")]),e._v(" automatically.\n        However it is also a stand alone class and can be used separately for programmatically validating values.\n        The constructor can optionally take an object to map each field name to a set of validations.\n        "),e._c("code-block",{
staticClass:"language-javascript"},[e._v("\n            import { Validator } from 'vee-validate';\n            const validator = new Validator({\n                email: 'required|email',\n                name: 'required|alpha|min:3',\n            }); // or Validator.create({ ... });\n        ")]),e._v("\n        But you can construct the object without passing anything and add the validation rules later.\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            import { Validator } from 'vee-validate';\n            const validator = new Validator();\n\n            validator.attach('email', 'required|email'); // attach field.\n            validator.attach('name', 'required|alpha', { prettyName: 'Full Name' }); // attach field with display name for error generation.\n\n            validator.detach('email'); // you can also detach fields.\n        ")]),e._v("\n        After that you can validate values with "),e._c("code",{staticClass:"inline"},[e._v("validate(field, value)")]),e._v(" which should return a boolean if all validations pass. Like this:\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            validator.validate('email', 'foo@bar.com'); // true\n            validator.validate('email', 'foo@bar'); // false\n        ")]),e._v(" "),e._c("note",[e._v("\n            Most validators return a Boolean, however some validators (very few) return a "),e._c("code",[e._v("Promise")]),e._v(" The validator is aware of this and will only return a Promise if at least one validation yields a promise. the promise is resolved to boolean which you can later chain to check your fields.\n        ")]),e._v(" "),e._c("br"),e._v("\n        You can validate multiple values at the same time using "),e._c("code",{staticClass:"inline"},[e._v("validateAll(obj)")]),e._v(":\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            validator.validateAll({\n                email: 'foo@bar.com',\n                name: 'John Snow'\n            });\n        ")]),e._v("\n        Returns true if all values passed validation, false if at least one value failed validation. will return a "),e._c("code",[e._v("Promise")]),e._v(" if at least one field validation rule returned a "),e._c("code",[e._v("Promise")]),e._v(" which is also resolved to a boolean. The ErrorBag will be populated with any errors encountered.\n        You can access the "),e._c("code",{staticClass:"inline"},[e._v("errorBag")]),e._v(" property directly or using "),e._c("code",{staticClass:"inline"},[e._v("getErrors()")]),e._v(".\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            var errorBag = validator.errorBag;\n            // or\n            var errorBag = validator.getErrors();\n        ")]),e._v("\n\n        The validator instance can only generate messages for one locale at a time. But you need to use "),e._c("code",{staticClass:"inline"},[e._v("setLocale")]),e._v(" method to switch the validator locale.\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            validator.setLocale('ar');\n        ")]),e._v(" "),e._c("note",[e._v("\n            All validators share the same locale configuration. so any locale changes will update all validator instances across your app.\n            For more information about how to overwrite messages and add new ones, please refer to the "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"custom-messages"}}},[e._v("custom messages")]),e._v(" section.\n        ")]),e._v(" "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            import { Validator } from 'vee-validate';\n\n            // Also exposed on the class.\n            Validator.setLocale('ar'); // Set all validator locales to 'ar'.\n            Validator.create().getLocale() // 'ar';\n\n            Validator.setLocale(); // resets to english because no argument was passed, all validators will be switched to English.\n        ")])]),e._v(" "),e._c("validator-api"),e._v(" "),e._m(5),e._v(" "),e._c("p",[e._v("\n        Here is an example of using the validator without the directive, which means you will be responsible for monitoring input changes on your own, and calling the API methods as you see fit.\n        This example uses a Vue instance to simplify things, but it can be used in plain JavaScript as well.\n    ")]),e._v(" "),e._c("validator-example")])},staticRenderFns:[function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"directive"}},[e._c("a",{attrs:{href:"#directive"}},[e._v("v-validate Directive")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-5"},[e._c("a",{attrs:{href:"#directive-args"}},[e._v("args")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"data-attributes"}},[e._c("a",{attrs:{href:"#data-attributes"}},[e._v("data-* Attributes")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"error-bag"}},[e._c("a",{attrs:{href:"#error-bag"}},[e._v("ErrorBag")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"validator"}},[e._c("a",{attrs:{href:"#validator"}},[e._v("Validator")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"validator-example"}},[e._c("a",{attrs:{href:"#validator-example"}},[e._v("Validator Example")])])}]}},409:function(e,a){e.exports={render:function(){var e=this;return e._c("div",[e._m(0),e._v(" "),e._c("p",[e._v("\n        This plugin only comes with English messages to keep things small, but it was built with flexible message generation in mind.\n        "),e._c("br"),e._v("\n        The "),e._c("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/dist/locale/en.js",target:"github"}},[e._v("English messages file")]),e._v(" is an example on how you would structure those messages.\n        Then you may want to update the validator dictionary, which should happen once in your app startup. still you may update them whenever you want in any point of your app, review the "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#custom-messages"}}},[e._v("custom messages")]),e._v(" here.\n    ")]),e._v(" "),e._m(1),e._v(" "),e._c("p",[e._v("\n        Seeing 'first_name' in your error messages can't be very good for your user experience, this plugin offer a couple of solutions:\n\n        You can use the "),e._c("code",[e._v("data-vv-as")]),e._v(" attribute on your field and give it a better name for your users, it would look like this:\n        "),e._c("code-block",{staticClass:"language-html"},[e._v('\n            <input v-validate data-vv-rules="alpha|min:3" data-vv-as="First Name" name="first_name" type="text">\n        ')]),e._v("\n\n        Now when any error message is generated for this input will use the "),e._c("code",[e._v("data-vv-as")]),e._v(" value instead of the actual field name. This is also the same for binding expressions.\n        While this is very useful for simple setups and displaying localized names, but it is only ideal for a single-locale page, for multi-localized pages and more advanced usages you might want to check the approach below.\n    ")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._c("p",[e._v("\n        Here is a little code example on how would you add support for your localized messages and attributes. Note that this is the entry point of your application.\n    ")]),e._v(" "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n        import Vue from 'vue';\n        import VeeValidate from 'vee-validate';\n        import messagesAr from './strings/validator/messages/ar.js';\n        import attributesAr from './strings/validator/attributes/ar.js';\n        import attributesEn from './strings/validator/attributes/en.js';\n\n        // Pass options to make all validators use the arabic language, also merge the english and arabic attributes with the internal dictionary.\n        // You can still modify each validator locale indvidually via the 'setLocale' on the validator instance.\n        Vue.use(VeeValidate, {\n            locale: 'ar',\n            dictionary: { // dictionary object\n                en: {  // locale key\n                    attributes: attributesEn // English attributes\n                },\n                ar: {   // locale key\n                    messages: messagesAr,   // Arabic messages\n                    attributes: attributesAr  // Arabic attributes\n                }\n            }\n        });\n\n\n        new Vue({\n            el: '#app',\n            data: {\n                // Some Data ...\n            },\n            methods {\n                // Cool methods ...\n            }\n        });\n    ")]),e._v(" "),e._c("note",[e._v("\n        Both the validator class and the validator instances offer "),e._c("code",{staticClass:"inline"},[e._v("setLocale")]),e._v(" method which changes the current locale for "),e._c("b",[e._v("All Validators")]),e._v(" to the specified locale, not providing a locale will switch them to English instead.\n    ")]),e._v(" "),e._c("div",[e._v("\n        A working example can be found "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"examples",hash:"#locale-example"}}},[e._v("here")]),e._v(".\n    ")]),e._v(" "),e._m(4),e._v(" "),e._m(5)])},staticRenderFns:[function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"translation"}},[e._c("a",{attrs:{href:"#translation"}},[e._v("Translation")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"attributes-data-vv-as"}},[e._c("a",{attrs:{href:"#attributes-data-vv-as"}},[e._v("Attributes (data-vv-as)")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"attributes-dictionary"}},[e._c("a",{attrs:{href:"#attributes-dictionary"}},[e._v("Attributes (Dictionary)")])])},function(){var e=this;return e._c("p",[e._v("\n        All validators have access to a simple dictionary that is shared between all of them, this dictionary contains localized error messages and attributes, if the validator finds a localized attribute name for that field it will be used instead of the field name.\n        Pretty much like "),e._c("code",[e._v("data-vv-as")]),e._v(" but "),e._c("code",[e._v("data-vv-as")]),e._v(" takes priorty if both are found.\n    ")])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"localized-files"}},[e._c("a",{attrs:{href:"#localized-files"}},[e._v("Localized Files")])])},function(){var e=this;return e._c("p",[e._v("\n        In the "),e._c("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate/tree/master/dist/locale",target:"github"}},[e._c("code",{staticClass:"inline"},[e._v("dist/locale")])]),e._v(" directory of this plugin, is a collection of localized files.\n        If you can't find your locale, you could help this plugin by contributing a localized version to the "),e._c("a",{staticClass:"link",attrs:{href:"https://github.com/logaretm/vee-validate",target:"github"}},[e._v("repo")]),e._v(". I will happily accept it.\n    ")])}]}},413:function(e,a){e.exports={render:function(){var e=this;return e._c("div",[e._m(0),e._v(" "),e._c("p",[e._v("\n        The validation rules have a very simple syntax similar to "),e._c("a",{staticClass:"link",attrs:{target:"laravel",href:"https://laravel.com/docs/5.3/validation"}},[e._v("Laravel validation syntax")]),e._v(".\n        A validation expression is a string of a series of validators separated by a pipe "),e._c("code",{staticClass:"inline"},[e._v("|")]),e._v(":\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            var single = 'required'; // single rule.\n            var multiple = 'required|numeric' // multiple rules.\n        ")]),e._v("\n        Rules can also take on an object form for complex and more readable rules:\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            var single = { required: true }; // required field.\n            var multiple = {\n                required: true,\n                numeric: true,\n                email: true\n            };\n        ")]),e._v("\n        Some rules can have parameters, which are passed in a comma separated list without spaces.\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            var someRule = 'in:1,2,3,4';\n\n            var someRuleObj = {\n                in: [1, 2, 3, 4]\n            };\n        ")])]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._c("div",{staticClass:"columns is-multiline"},e._l(e.rules,function(a){return e._c("div",{class:"column is-"+12/e.rules.length},[e._c("ul",{staticClass:"list-circle"},e._l(a,function(a){return e._c("li",[e._c("router-link",{staticClass:"link",attrs:{to:{name:"rules",hash:"#rule-"+a}}},[e._v(e._s(a))])])}))])})),e._v(" "),e._c("div",{staticClass:"rules"},[e._c("note",{attrs:{title:"note"}},[e._v("\n            Date validators always require the "),e._c("code",[e._v("date_format")]),e._v(" rule to be always present and must preceed them in the rules order. The date validators are not enabled by default, they require "),e._c("a",{attrs:{href:"http://momentjs.com"}},[e._v("momentjs")]),e._v(" in order to work.\n            If your setup contains momentjs globally, it will be installed automatically for all validator instances. Otherwise you may want to pass the moment reference to "),e._c("code",[e._v("installDateTimeValidators(moment)")]),e._v(" which is available both statically and on instances.\n\n            Also note that the date validators always use the "),e._c("a",{staticClass:"link",attrs:{href:"http://momentjs.com/guides/#/parsing/strict-mode/"}},[e._v("'strict' moment parsing mode")]),e._v(".\n        ")]),e._v(" "),e._c("note",[e._v("\n            In the rule signature required parameters are enclosed within "),e._c("code",[e._v("{}")]),e._v(" like this: "),e._c("code",[e._v("{param}")]),e._v(".\n            "),e._c("br"),e._v("\n            Optional parameters have a "),e._c("code",[e._v("?")]),e._v(" at the end: "),e._c("code",[e._v("{optional?}")]),e._v(".\n            "),e._c("br"),e._v("\n            Lists are enclosed withn brackets "),e._c("code",[e._v("[]")]),e._v(". ex: "),e._c("code",[e._v("[list]")]),e._v(".\n        ")]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-after"}},[e._c("b",{staticClass:"important"},[e._v("after:{target}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must have a valid date and is after the date value in the target field.\n            ")]),e._v(" "),e._m(3),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"date_format:DD/MM/YYYY|after:after_field_target",expression:"'date_format:DD/MM/YYYY|after:after_field_target'"}],class:{input:!0,"is-danger":e.errors.has("after_field")},attrs:{name:"after_field",type:"text",placeholder:"DD/MM/YYYY"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("after_field"),expression:"errors.has('after_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("after_field")))])]),e._v(" "),e._c("p",{staticClass:"control"},[e._c("input",{class:{input:!0,"is-danger":e.errors.has("after_field")},attrs:{name:"after_field_target",type:"text",placeholder:"DD/MM/YYYY"}})])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-alpha"}},[e._c("b",{staticClass:"important"},[e._v("alpha")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation may only contain alphabetic characters.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"alpha",expression:"'alpha'"}],class:{input:!0,"is-danger":e.errors.has("alpha_field")},attrs:{name:"alpha_field",type:"text",placeholder:"Enter Some Characters..."}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("alpha_field"),expression:"errors.has('alpha_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("alpha_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-alpha_dash"}},[e._c("b",{staticClass:"important"},[e._v("alpha_dash")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation may contain alphabetic characters, numbers, dashes or underscores.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"alpha_dash",expression:"'alpha_dash'"}],class:{input:!0,"is-danger":e.errors.has("alpha_dash_field")},attrs:{name:"alpha_dash_field",type:"text",placeholder:"Enter characters or dashes"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("alpha_dash_field"),expression:"errors.has('alpha_dash_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("alpha_dash_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-alpha_num"}},[e._c("b",{staticClass:"important"},[e._v("alpha_num")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation may contain alphabetic characters or numbers.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"alpha_num",expression:"'alpha_num'"}],class:{input:!0,"is-danger":e.errors.has("alpha_num_field")},attrs:{name:"alpha_num_field",type:"text",placeholder:"Enter characters and numbers"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("alpha_num_field"),expression:"errors.has('alpha_num_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("alpha_num_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-alpha_spaces"}},[e._c("b",{staticClass:"important"},[e._v("alpha_spaces")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation may contain alphabetic characters or spaces.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"alpha_spaces",expression:"'alpha_spaces'"}],class:{input:!0,"is-danger":e.errors.has("alpha_spaces_field")},attrs:{name:"alpha_spaces_field",type:"text",placeholder:"Enter characters and spaces"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("alpha_spaces_field"),expression:"errors.has('alpha_spaces_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("alpha_spaces_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-before"}},[e._c("b",{staticClass:"important"},[e._v("before:{target}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must have a valid date and is before the date value in the target field.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"date_format:DD/MM/YYYY|before:before_field_target",expression:"'date_format:DD/MM/YYYY|before:before_field_target'"}],class:{input:!0,"is-danger":e.errors.has("before_field")},attrs:{name:"before_field",type:"text",placeholder:"DD/MM/YYYY"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("before_field"),expression:"errors.has('before_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("before_field")))])]),e._v(" "),e._c("p",{staticClass:"control"},[e._c("input",{class:{input:!0,"is-danger":e.errors.has("alpha_field")},attrs:{name:"before_field_target",type:"text",placeholder:"DD/MM/YYYY"}})])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-between"}},[e._c("b",{staticClass:"important"},[e._v("between:{min},{max}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must have a numeric value bounded by a minimum value and a maximum value.\n            ")]),e._v(" "),e._m(4),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"between:1,11",expression:"'between:1,11'"}],class:{input:!0,"is-danger":e.errors.has("between_field")},attrs:{name:"between_field",type:"text",placeholder:"Enter a number between 1 and 11"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("between_field"),expression:"errors.has('between_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("between_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-confirmed"}},[e._c("b",{staticClass:"important"},[e._v("confirmed:{target}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must have the exact same value as the confirmation field.\n            ")]),e._v(" "),e._m(5),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"confirmed:pw_confirm",expression:"'confirmed:pw_confirm'"}],class:{input:!0,"is-danger":e.errors.has("confirm_field")},attrs:{name:"confirm_field",type:"password",placeholder:"Enter The Password"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("confirm_field"),expression:"errors.has('confirm_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("confirm_field")))])]),e._v(" "),e._c("p",{staticClass:"control"},[e._c("input",{class:{input:!0,"is-danger":e.errors.has("confirm_field")},attrs:{name:"pw_confirm",type:"password",placeholder:"Confirm the password"}})])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-credit_card"}},[e._c("b",{staticClass:"important"},[e._v("credit_card")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be a valid credit card.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"credit_card",expression:"'credit_card'"}],class:{input:!0,"is-danger":e.errors.has("credit_field")},attrs:{name:"credit_field",type:"text",placeholder:"Enter A Credit Card Number"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("credit_field"),expression:"errors.has('credit_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("credit_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-date_between"}},[e._c("b",{staticClass:"important"},[e._v("date_between:{min,max}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be a valid date between the two dates specified.\n            ")]),e._v(" "),e._m(6),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"date_format:DD/MM/YYYY|date_between:10/09/2016,20/09/2016",expression:"'date_format:DD/MM/YYYY|date_between:10/09/2016,20/09/2016'"}],class:{input:!0,"is-danger":e.errors.has("date_between_field")},attrs:{name:"date_between_field",type:"text",placeholder:"DD/MM/YYYY betweem 10/09/2016 and 20/09/2016"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("date_between_field"),expression:"errors.has('date_between_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("date_between_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-date_format"}},[e._c("b",{staticClass:"important"},[e._v("date_format:{format}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be a valid date in the specified format. This rule must be present when using any date rules.\n            ")]),e._v(" "),e._m(7),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"date_format:DD/MM/YYYY",expression:"'date_format:DD/MM/YYYY'"}],class:{input:!0,"is-danger":e.errors.has("date_format_field")},attrs:{name:"date_format_field",type:"text",placeholder:"DD/MM/YYYY"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("date_format_field"),expression:"errors.has('date_format_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("date_format_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-decimal"}},[e._c("b",{staticClass:"important"},[e._v("decimal:{decimals?}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be numeric and may contain the specified amount of decmial points.\n            ")]),e._v(" "),e._m(8),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"decimal:3",expression:"'decimal:3'"}],class:{input:!0,"is-danger":e.errors.has("decimal_field")},attrs:{name:"decimal_field",type:"text",placeholder:"Numeric value with decimals"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("decimal_field"),expression:"errors.has('decimal_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("decimal_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-digits"}},[e._c("b",{staticClass:"important"},[e._v("digits:{length}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be numeric and have the specified number of digits.\n            ")]),e._v(" "),e._m(9),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"digits:3",expression:"'digits:3'"}],class:{input:!0,"is-danger":e.errors.has("digits_field")},attrs:{name:"digits_field",type:"text",placeholder:"Enter 3 digit number"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("digits_field"),expression:"errors.has('digits_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("digits_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-dimensions"}},[e._c("b",{staticClass:"important"},[e._v("dimensions:{width},{height}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The file added to the field under validation must be an image (jpg,svg,jpeg,png,bmp,gif) have the exact specified dimensions.\n            ")]),e._v(" "),e._m(10),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"dimensions:30,30",expression:"'dimensions:30,30'"}],attrs:{"data-vv-as":"image",name:"dimensions_field",type:"file"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("dimensions_field"),expression:"errors.has('dimensions_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("dimensions_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-email"}},[e._c("b",{staticClass:"important"},[e._v("email")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be a valid email.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"email",expression:"'email'"}],class:{input:!0,"is-danger":e.errors.has("email_field")},attrs:{"data-vv-as":"email",name:"email_field",type:"text",placeholder:"Your Email"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email_field"),expression:"errors.has('email_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("email_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-ext"}},[e._c("b",{staticClass:"important"},[e._v("ext:[extensions]")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The file added the field under validation must have one of the extensions specified.\n            ")]),e._v(" "),e._m(11),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"ext:jpeg,jpg",expression:"'ext:jpeg,jpg'"}],attrs:{"data-vv-as":"field",name:"ext_field",type:"file"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("ext_field"),expression:"errors.has('ext_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("ext_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-image"}},[e._c("b",{staticClass:"important"},[e._v("image")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The file added the field under validation must have an image mime type (image/*).\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"image",expression:"'image'"}],attrs:{"data-vv-as":"image",name:"image_field",type:"file"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("image_field"),expression:"errors.has('image_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("image_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-in"}},[e._c("b",{staticClass:"important"},[e._v("in:[list]")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must have a value that is in the specified list.\n            ")]),e._v(" "),e._m(12),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("span",{staticClass:"select"},[e._c("select",{directives:[{name:"validate",rawName:"v-validate",value:"in:1,2,3",expression:"'in:1,2,3'"}],class:{"is-danger":e.errors.has("in_field")},attrs:{name:"in_field","data-vv-as":"selected"}},[e._c("option",{attrs:{value:"1"}},[e._v("One")]),e._v(" "),e._c("option",{attrs:{value:"2"}},[e._v("Two")]),e._v(" "),e._c("option",{attrs:{value:"3"}},[e._v("Three")]),e._v(" "),e._c("option",{attrs:{value:"4"}},[e._v("Invalid")])])]),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("in_field"),expression:"errors.has('in_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("in_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-ip"}},[e._c("b",{staticClass:"important"},[e._v("ip")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must have a string that is a valid ipv4 value.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"ip",expression:"'ip'"}],class:{input:!0,"is-danger":e.errors.has("ip_field")},attrs:{"data-vv-as":"ip",name:"ip_field",type:"text",placeholder:"Your IP Address"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("ip_field"),expression:"errors.has('ip_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("ip_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-max"}},[e._c("b",{staticClass:"important"},[e._v("max:{length}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation length may not exceed the specified length.\n            ")]),e._v(" "),e._m(13),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"max:11",expression:"'max:11'"}],class:{input:!0,"is-danger":e.errors.has("max_field")},attrs:{"data-vv-as":"field",name:"max_field",type:"text",
placeholder:"11 Characters or shorter"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("max_field"),expression:"errors.has('max_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("max_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-max_value"}},[e._c("b",{staticClass:"important"},[e._v("max_value:{value}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be numeric value and must not be greater than the specified value.\n            ")]),e._v(" "),e._m(14),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"max_value:9000",expression:"'max_value:9000'"}],class:{input:!0,"is-danger":e.errors.has("max_value_field")},attrs:{"data-vv-as":"field",name:"max_value_field",type:"text",placeholder:"Can you go over 9000?"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("max_value_field"),expression:"errors.has('max_value_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("max_value_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-mimes"}},[e._c("b",{staticClass:"important"},[e._v("mimes:[list]")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The file type added to the field under validation should have one of the specified mime types.\n            ")]),e._v(" "),e._m(15),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("label",{staticClass:"label"},[e._v("Image File")]),e._v(" "),e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"mimes:image/*",expression:"'mimes:image/*'"}],attrs:{"data-vv-as":"image",name:"mimes_field",type:"file"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("mimes_field"),expression:"errors.has('mimes_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("mimes_field")))])])]),e._v(" "),e._c("note",[e._v("\n                You can use '*' to specify a wild card, something like "),e._c("code",[e._v("mimes:image/*")]),e._v(" will accept all image types.\n            ")])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-min"}},[e._c("b",{staticClass:"important"},[e._v("min:{length}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation length should not be less than the specified length.\n            ")]),e._v(" "),e._m(16),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"min:3",expression:"'min:3'"}],class:{input:!0,"is-danger":e.errors.has("min_field")},attrs:{"data-vv-as":"field",name:"min_field",type:"text",placeholder:"Min: 3"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("min_field"),expression:"errors.has('min_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("min_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-min_value"}},[e._c("b",{staticClass:"important"},[e._v("min_value:{value}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be numeric value and must not be less than the specified value.\n            ")]),e._v(" "),e._m(17),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"min_value:10",expression:"'min_value:10'"}],class:{input:!0,"is-danger":e.errors.has("min_value_field")},attrs:{"data-vv-as":"field",name:"min_value_field",type:"text",placeholder:"What is bigger than 10?"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("min_value_field"),expression:"errors.has('min_value_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("min_value_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-not_in"}},[e._c("b",{staticClass:"important"},[e._v("not_in:[list]")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation length should not have any value within the specified values.\n            ")]),e._v(" "),e._m(18),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("span",{staticClass:"select"},[e._c("select",{directives:[{name:"validate",rawName:"v-validate",value:"not_in:1,2,3",expression:"'not_in:1,2,3'"}],class:{"is-danger":e.errors.has("not_in_field")},attrs:{name:"not_in_field","data-vv-as":"selected"}},[e._c("option",{attrs:{value:"1"}},[e._v("One - Invalid")]),e._v(" "),e._c("option",{attrs:{value:"2"}},[e._v("Two - Invalid")]),e._v(" "),e._c("option",{attrs:{value:"3"}},[e._v("Three - Invalid")]),e._v(" "),e._c("option",{attrs:{value:"4"}},[e._v("Four - Valid")])])]),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("not_in_field"),expression:"errors.has('not_in_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("not_in_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-numeric"}},[e._c("b",{staticClass:"important"},[e._v("numeric")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must only consist of numbers.\n            ")]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"numeric",expression:"'numeric'"}],class:{input:!0,"is-danger":e.errors.has("numeric_field")},attrs:{"data-vv-as":"field",name:"numeric_field",type:"text",placeholder:"Numbers only"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("numeric_field"),expression:"errors.has('numeric_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("numeric_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-regex"}},[e._c("b",{staticClass:"important"},[e._v("regex:{pattern}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must match the specified regular expression.\n            ")]),e._v(" "),e._m(19),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("label",{staticClass:"label"},[e._v("Regex: ^([0-9]+)$")]),e._v(" "),e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"regex:^([0-9]+)$",expression:"'regex:^([0-9]+)$'"}],class:{input:!0,"is-danger":e.errors.has("regex_field")},attrs:{"data-vv-as":"field",name:"regex_field",type:"text",placeholder:"Numbers only"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("regex_field"),expression:"errors.has('regex_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("regex_field")))])])]),e._v(" "),e._c("note",[e._v("\n                You should not use the pipe '|' or commas ',' within your regular expression in the HTML as it will cause a conflict with how validators parsing work. You should use the object format of the rules instead, for example:\n                "),e._c("code",[e._v('v-validate="{ rules: { regex: /.(js|ts)$/}}"')])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-required"}},[e._c("b",{staticClass:"important"},[e._v("required")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v('\n                The field under validation must have a non-empty value. By default all validators pass the validation if they have "empty values" unless they are required. Those empty values are: empty string, undefined, null.\n            ')]),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"required",expression:"'required'"}],class:{input:!0,"is-danger":e.errors.has("required_field")},attrs:{"data-vv-as":"field",name:"required_field",type:"text",placeholder:"Is Required"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("required_field"),expression:"errors.has('required_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("required_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-size"}},[e._c("b",{staticClass:"important"},[e._v("size:{kb}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The file size added to the field under validation must not exceed the specified size in kilobytes.\n            ")]),e._v(" "),e._m(20),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"size:10",expression:"'size:10'"}],attrs:{name:"size_field","data-vv-as":"file",type:"file"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("size_field"),expression:"errors.has('size_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("size_field")))])])])]),e._v(" "),e._c("div",{staticClass:"rule",attrs:{id:"rule-url"}},[e._c("b",{staticClass:"important"},[e._v("url:{require_protocol?}")]),e._v(" "),e._c("div",{staticClass:"description"},[e._v("\n                The field under validation must be a valid url. Protocols are not required by default.\n            ")]),e._v(" "),e._m(21),e._v(" "),e._c("div",[e._c("p",{staticClass:"control"},[e._c("input",{directives:[{name:"validate",rawName:"v-validate",value:"url:require_protocol",expression:"'url:require_protocol'"}],class:{input:!0,"is-danger":e.errors.has("url_field")},attrs:{"data-vv-as":"field",name:"url_field",type:"text",placeholder:"Enter a url"}}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("url_field"),expression:"errors.has('url_field')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("url_field")))])])])])]),e._v(" "),e._m(22),e._v(" "),e._c("p",[e._v("\n        You can easily add custom rules to the validators, but your custom validation rules must adhere to a contract, or certain structure:\n        "),e._c("br"),e._c("br"),e._v(" "),e._c("b",{staticClass:"important"},[e._v("Function Form:")]),e._v("\n        This is the most basic custom validator form, it consists of only a function that returns either a Boolean or a promise. However it will have a default error message.\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            const validator = (value, args) => {\n                // Return a Boolean or a Promise.\n            }\n        ")]),e._v(" "),e._c("b",{staticClass:"important"},[e._v("Object Form:")]),e._v(" "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            const validator = {\n                getMessage(field, args) { // will be added to default English messages.\n                    // Returns a message.\n                },\n                validate(value, args) {\n                    // Returns a Boolean or a Promise.\n                }\n            };\n        ")]),e._v(" "),e._c("b",{staticClass:"important"},[e._v("Localized Object Form:")]),e._v(" "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            const validator = {\n                messages: {\n                    en: (field, args) => {\n                        // Returns a message.\n                    },\n                    cn: (field, args) => {\n                        // Returns a Chinese message.\n                    }\n                },\n                validate(value, args) {\n                    // Returns a Boolean or a Promise.\n                }\n            };\n        ")]),e._v("\n        This validator form must have a "),e._c("code",{staticClass:"inline"},[e._v("validate")]),e._v(" method, and either a "),e._c("code",{staticClass:"inline"},[e._v("getMessage")]),e._v(" method, or a "),e._c("code",{staticClass:"inline"},[e._v("messages")]),e._v(" object.\n        The only difference that the latter will allow you to add localized messages, the former only adds it to the English dictionary.\n\n        "),e._c("note",[e._v("\n            Notice how the "),e._c("code",[e._v("messages")]),e._v(" methods gets passed the "),e._c("code",[e._v("field")]),e._v(" which is the name of the field under validation as a first parameter.\n            And how the "),e._c("code",[e._v("validate")]),e._v(" method gets passed the value as a first parameter.\n            And both receive the "),e._c("code",[e._v("args")]),e._v(" which are the parameters (arguments) that were configured with the validation rule.\n            for example look at the "),e._c("a",{attrs:{href:"https://github.com/logaretm/vee-validate/blob/master/src/rules/min.js"}},[e._v("actual implementation of the min rule")]),e._v(".\n        ")]),e._v(" "),e._c("note",[e._v("\n            As you can see a validation rule must implement one of the three forms discussed above.\n             Not doing so will throw a "),e._c("code",[e._v("ValidatorException")]),e._v(" with a suitable error message detailing what were you missing.\n        ")]),e._v("\n\n        Additionally you may want to provide a reason for failing the validation that may change the error message. For example you may be using an external API and the error message is generated there.\n        "),e._c("br"),e._c("br"),e._v("\n        To acheive this, you need to return an "),e._c("code",[e._v("Object")]),e._v(" instead of a "),e._c("code",[e._v("Boolean")]),e._v(" this object should always contain a "),e._c("code",[e._v("valid")]),e._v(" property and an optional "),e._c("code",[e._v("data")]),e._v(" property, the data property will be passed to the message generator function as the third parameter, then you should use the passed data property to modify the output message. The same thing applies to promises as you resolve the promise with an object containg those properties. Here is a custom rule that does just that:\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            const myRule = {\n                getMessage(field, params, data) {\n                    return (data && data.message) || 'Something went wrong';\n                },\n                validate(value) {\n                    return new Promise(resolve => {\n                        resolve({\n                            valid: value === 'trigger' ? false : !! value,\n                            data: value !== 'trigger' ? undefined : {\n                                message: 'Not this value'\n                            }\n                        });\n                    })\n                }\n            };\n        ")])]),e._v(" "),e._c("p",[e._v("\n        After creating your validator, you can add it to the list of rules using "),e._c("code",{staticClass:"inline"},[e._v("extend(name, validator)")]),e._v(" method in the validator instance.\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            import { Validator } from 'vee-validate';\n            // These are 'ES6' arrow functions.\n            Validator.extend('truthy', {\n                getMessage: field => 'The ' + field + ' value is not truthy.',\n                validate: value => !! value\n            });\n\n            let instance = new Validator({\n                trueField: 'truthy'\n            });\n\n            // Also there is an instance 'extend' method for convience.\n            instance.extend('falsy', (value) => ! value);\n            instance.attach('falseField', 'falsy');\n        ")]),e._v(" "),e._c("note",[e._v("\n            Using any of the "),e._c("code",[e._v("extend")]),e._v(" either statically or on an instance will extend all validators with the new validation rule.\n            extending a new rule that have the same name as an existing rule will throw a "),e._c("code",[e._v("ValidatorException")]),e._v(" with an error message.\n        ")])]),e._v(" "),e._m(23),e._v(" "),e._c("p",[e._v("\n        Of course you might need to overwrite the error messages, or add new ones. The Validator class and its instances provide an "),e._c("code",{staticClass:"inline"},[e._v("updateDictionary")]),e._v(" method.\n        which will merge the messages with the internal dictionary, overwriting any duplicates.\n        "),e._c("note",[e._v("\n            Any merges will have an effect on all validator instances as the messages dictionary is shared.\n        ")]),e._v(" "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            import { Validator } from 'vee-validate';\n\n            const dictionary = {\n                en: {\n                    messages: {\n                        alpha: () => 'Some English Message'\n                    }\n                },\n                ar: {\n                    messages: {\n                        alpha: () => 'Some Arabic Message'\n                    }\n                }\n            };\n\n            Validator.updateDictionary(dictionary);\n\n            const validator = new Validator({ first_name: 'alpha' });\n            validator.setLocale('ar'); // now this validator will generate messages in arabic.\n        ")])]),e._c("p",[e._v("\n            Usually you would stucture your language files for your app rather than adding hardcoded strings like the example above, check the "),e._c("router-link",{staticClass:"link",attrs:{to:{name:"localization"}}},[e._v("localization guide")]),e._v(" for a better approach.\n        ")]),e._v(" "),e._c("note",[e._v("\n            You must provide the messages in an object path like: "),e._c("code",[e._v("dictionary.locale.message")]),e._v(".\n        ")]),e._v(" "),e._c("p"),e._v(" "),e._m(24),e._v(" "),e._c("p",[e._v('\n        Like the custom messages, the validators share a dictionary containing the attribute names, for example if you want to use "Email Address" instead of "email" in your error messages, this can be easily acheived by including an '),e._c("code",[e._v("attributes")]),e._v(" object in the dictionary.\n        "),e._c("br"),e._c("br"),e._v("Unlike messages, no attributes are included in the default dictionary.\n        "),e._c("code-block",{staticClass:"language-javascript"},[e._v("\n            import { Validator } from 'vee-validate';\n\n            const dictionary = {\n                en: {\n                    attributes: {\n                        email: 'Email Address'\n                    }\n                },\n                ar: {\n                    attributes: {\n                        email: 'البريد الاليكتروني'\n                    }\n                }\n            };\n\n            Validator.updateDictionary(dictionary);\n        ")]),e._v(" "),e._c("note",[e._v("\n            If the attribute is not found for the current locale, it will fallback to the binding expression or the field name. If you use the "),e._c("router-link",{attrs:{to:{name:"localization",hash:"#attributes-data-vv-as"}}},[e._v("data-vv-as")]),e._v(" attribute it will take precedence over the internal dictionary.\n        ")])])])},staticRenderFns:[function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"syntax"}},[e._c("a",{attrs:{href:"#syntax"}},[e._v("Syntax")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"available-validations"}},[e._c("a",{attrs:{href:"#available-validations"}},[e._v("Available Rules")])])},function(){var e=this;return e._c("p",[e._c("code",{staticClass:"inline"},[e._v("vee-validate")]),e._v(" Comes out of the box with many validation rules, which are:\n    ")])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("target:")]),e._v("The input name to be validated against. Must have the same format as the date_format rule.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("min:")]),e._v(" The minimum value.")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("max:")]),e._v(" The maximum value.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("target:")]),e._v(" The name of the confirmation field.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("min:")]),e._v("The minimum allowed value for date. Must be in the same format as the date_format rule.")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("max:")]),e._v("The maximum allowed value for date. Must be in the same format as the date_format rule.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("format:")]),e._v(" The date format. See "),e._c("a",{attrs:{href:"http://momentjs.com/docs/#/parsing/string-format/"}},[e._v("momentjs parsing.")])])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("decmials:")]),e._v(" The maximum allowed number of decimal point numbers. Not passing the decmials will accept numeric data which may or may not contain decimal point numbers.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("length:")]),e._v(" The number of digits.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("width:")]),e._v(" The width of the image.")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("height:")]),e._v(" The height of the image.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("code",{staticClass:"inline"},[e._v("args:")]),e._v(" Comma separated list of extensions. ex: "),e._c("code",{staticClass:"inline"},[e._v("ext:jpg,png,bmp,svg")]),e._v(".\n            ")])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("code",{staticClass:"inline"},[e._v("args:")]),e._v(" Comma separated list of values. ex "),e._c("code",{staticClass:"inline"},[e._v("in:1,2,3,4")])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("length:")]),e._v(" A numeric value representing the maximum number of characters.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("value:")]),e._v(" A numeric value representing the greatest value allowed.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("code",{staticClass:"inline"},[e._v("args:")]),e._v(" List of comma separated mime types. "),e._c("code",{staticClass:"inline"},[e._v("mimes:image/jpeg,image/png")])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("length:")]),e._v(" A numeric value representing the minimum number of characters.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("value:")]),e._v(" A numeric value representing the lowest value allowed.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("code",{staticClass:"inline"},[e._v("args:")]),e._v(" Comma separated list of invalid values. ex: "),e._c("code",{staticClass:"inline"},[e._v("not_in:1,2,3,4")])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("pattern:")]),e._v(" A regular expression")]),e._v(" "),e._c("li",[e._c("code",{staticClass:"inline"},[e._v("flags:")]),e._v(" list of regular expression flags (optional)")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("size:")]),e._v(" The maximum file size in kilobytes.")])])])},function(){var e=this;return e._c("div",{staticClass:"args"},[e._c("span",{staticClass:"args__title"},[e._v("args:")]),e._v(" "),e._c("ul",[e._c("li",[e._c("code",{staticClass:"inline"},[e._v("require_protocol:")]),e._v(" If the protocol should be required, false by default. passing anything will require it.")])])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"custom-rules"}},[e._c("a",{attrs:{href:"#custom-rules"}},[e._v("Custom Rules")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"custom-messages"}},[e._c("a",{attrs:{href:"#custom-messages"}},[e._v("Custom Messages")])])},function(){var e=this;return e._c("h2",{staticClass:"title is-4",attrs:{id:"custom-attributes"}},[e._c("a",{attrs:{href:"#custom-attributes"}},[e._v("Custom Attributes")])])}]}},418:function(e,a){e.exports={render:function(){var e=this;return e._c("code-example",[e._c("div",{staticClass:"columns is-multiline",slot:"example"},[e._c("div",{staticClass:"column is-12"},[e._c("label",{staticClass:"label"},[e._v("Email")]),e._v(" "),e._c("p",{staticClass:"control has-icon has-icon-right"},[e._c("input",{directives:[{name:"model",rawName:"v-model",value:e.email,expression:"email"}],class:{input:!0,"is-danger":e.errors.has("email")},attrs:{name:"email",type:"text",placeholder:"Email"},domProps:{value:e._s(e.email)},on:{input:function(a){a.target.composing||(e.email=a.target.value)}}}),e._v(" "),e._c("i",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email"),expression:"errors.has('email')"}],staticClass:"fa fa-warning"}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("email"),expression:"errors.has('email')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("email")))])])]),e._v(" "),e._c("div",{staticClass:"column is-12"},[e._c("label",{staticClass:"label"},[e._v("Name")]),e._v(" "),e._c("p",{staticClass:"control has-icon has-icon-right"},[e._c("input",{directives:[{name:"model",rawName:"v-model",value:e.name,expression:"name"}],class:{input:!0,"is-danger":e.errors.has("name")},attrs:{name:"name",type:"text",placeholder:"Name"},domProps:{value:e._s(e.name)},on:{input:function(a){a.target.composing||(e.name=a.target.value)}}}),e._v(" "),e._c("i",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("name"),expression:"errors.has('name')"}],staticClass:"fa fa-warning"}),e._v(" "),e._c("span",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("name"),expression:"errors.has('name')"}],staticClass:"help is-danger"},[e._v(e._s(e.errors.first("name")))])])]),e._v(" "),e._c("p",{staticClass:"control"},[e._c("button",{staticClass:"button is-primary",attrs:{type:"button",name:"button"},on:{click:e.validateForm}},[e._v("Validate All")]),e._v(" "),e._c("button",{staticClass:"button is-danger",attrs:{type:"button",name:"button"},on:{click:e.clearErrors}},[e._v("Clear")])])]),e._v(" "),e._c("div",{slot:"code-html"},[e._v('\n        <div class="columns is-multiline">\n            <div class="column is-12">\n                <label class="label">Email</label>\n                <p class="control has-icon has-icon-right">\n                    <input v-model="email" name="email" :class="{\'input\': true, \'is-danger\': errors.has(\'email\') }" type="text" placeholder="Email">\n                    <i v-show="errors.has(\'email\')" class="fa fa-warning"></i>\n                    <span v-show="errors.has(\'email\')" class="help is-danger">'+e._s("{{ errors.first('email') }}")+'</span>\n                </p>\n            </div>\n            <div class="column is-12">\n                <label class="label">Name</label>\n                <p class="control has-icon has-icon-right">\n                    <input v-model="name" name="name" :class="{\'input\': true, \'is-danger\': errors.has(\'name\') }" type="text" placeholder="Name">\n                    <i v-show="errors.has(\'name\')" class="fa fa-warning"></i>\n                    <span v-show="errors.has(\'name\')" class="help is-danger">'+e._s("{{ errors.first('name') }}")+'</span>\n                </p>\n            </div>\n            <p class="control">\n                <button class="button is-primary" @click="validateForm" type="button" name="button">Validate All</button>\n                <button class="button is-danger" @click="clearErrors" type="button" name="button">Clear</button>\n            </p>\n        </div>\n    ')]),e._v(" "),e._c("div",{slot:"code-js"},[e._v("\n        import Vue from 'vue';\n        import { Validator } from 'vee-validate';\n\n        new Vue({\n            el: '#app',\n            validator: null, // private reference\n            data() {\n                return {\n                    email: '',\n                    name: '',\n                    errors: null\n                }\n            },\n            watch: {\n                email(value) {\n                    this.validator.validate('email', value);\n                },\n                name(value) {\n                    this.validator.validate('name', value);\n                }\n            },\n            methods: {\n                validateForm() {\n                    this.validator.validateAll({\n                        email: this.email,\n                        name: this.name\n                    });\n                },\n                clearErrors() {\n                    this.errors.clear();\n                }\n            },\n            created() {\n                this.validator = new Validator({\n                    email: 'required|email',\n                    name: 'required|alpha|min:3'\n                });\n                this.$set(this, 'errors', this.validator.errorBag); // update the data.\n            }\n        });\n    ")])])},staticRenderFns:[]}}});